{"meta":{"title":"XIAOHU blog","subtitle":"Welcome to my blog","description":"愿你走出半生路 归来仍是少年","author":"XIAOHU","url":"http://yoursite.com","root":"/"},"pages":[{"title":"文章分类","date":"2017-05-27T05:47:40.000Z","updated":"2020-03-02T07:19:57.631Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"文章分类","date":"2017-05-27T05:47:40.000Z","updated":"2020-03-02T08:14:54.853Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo的主题更换","slug":"article2","date":"2020-03-02T07:42:36.000Z","updated":"2020-03-02T08:08:10.103Z","comments":true,"path":"2020/03/02/article2/","link":"","permalink":"http://yoursite.com/2020/03/02/article2/","excerpt":"","text":"上一篇文章，介绍了如何利用 hexo+github pages 搭建个人博客。那么这篇文章则以我的博客为例详细教你打造个性超赞博客的主题。 现如今用的人最多的是next这个主题，而本人在昨天发现一个神仙主题：Butterfly,It’s so beautiful . 这个主题不过有点废图， 提供2个自己搜图用的网站 https://wallroom.io/ https://www.pexels.com/ 安装在你的博客根目录里 git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly 应用主题修改站点配置文件_config.yml，把主题改为Butterfly theme: Butterfly 配置配置文件说明站点配置文件config.yml是hexo工作目录下的主配置文件(还不知道是哪里的，自己google)butterfly.yml是Butterfly的配置文件。它需要你手动将主题目录下的 _config.yml 文件复制到 hexo 工作目录的source/data/butterfly.yml中。如果文件或者文件夹不存在，需要手动创建。*语言修改站点配置文件 _config.yml 默认语言是en 主题支持三种语言 ​ default(en)​ zh-CN (简体中文)​ zh-TW (繁体中文) 导航菜单配置menu: 首页: / || fa fa-home 归档: /archives/ || fa fa-archive 标签: /tags/ || fa fa-tags 分类: /categories/ || fa fa-folder-open 下面是butterfly的官方文档： https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B 然后是本人的博客地址。 https://moyang-mu.github.io/ 总而言之，虽然今天有课，然本人昨天还是战斗到了12点半，从下午三点开始，除了吃饭时间基本都在调bug，今天早上也是调了一上午，真是身心俱疲啊。 还想说一句，就是我昨天因为默认开启了图片懒加载，但又没配置好，结果导致图片只有data-src属性，没有src属性，结果就是自然不能显示了。哎，想想都是泪，昨天晚上基本都是在看代码和博客还有官方文档中度过。","categories":[{"name":"框架","slug":"框架","permalink":"http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"jsp1","slug":"jsp1-1","date":"2020-03-02T07:22:45.000Z","updated":"2020-03-02T08:46:49.999Z","comments":true,"path":"2020/03/02/jsp1-1/","link":"","permalink":"http://yoursite.com/2020/03/02/jsp1-1/","excerpt":"","text":"jsp的九大内置对象 bash1234jsp就本质相当于一个servlet，jsp的发明是为了简化我们对servlet的编写，用于在service方法中直接输出， 其中编写的java代码将会在添加到service方法中实现， jsp的重定向和请求转发 bash1234重定向是服务器将这个请求返回给浏览器，浏览器进行重新请求，区别在于，这次的请求的地址使用你上一次传回给他的。请求转发则是这个请求的内容等都不变，只不过把这个请求拿到另一个页面进行处理，处理完的结果在原页面显示。绝对路径:相对于项目的根路径，在路径前+上/相对路径:使用./或者什么都不加 由于cokkie部分版本不识别中文，导致可能出现中文乱码 bash1解决方案:使用两个工具类进行转码，URLEncoder在存储数据时候转码，URLDecoder在取出数据时进行转码。 Request在服务器请求资源原理解析 bash12 Requset在service中使用map集合一次性取出提交的表单数据的方法","categories":[{"name":"jsp","slug":"jsp","permalink":"http://yoursite.com/categories/jsp/"}],"tags":[{"name":"jsp开发","slug":"jsp开发","permalink":"http://yoursite.com/tags/jsp%E5%BC%80%E5%8F%91/"}]},{"title":"hexo的搭建","slug":"article","date":"2017-05-26T04:12:57.000Z","updated":"2020-03-02T07:47:47.725Z","comments":true,"path":"2017/05/26/article/","link":"","permalink":"http://yoursite.com/2017/05/26/article/","excerpt":"","text":"本文使用的是在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。 第一部分 hexo的初级搭建还有部署到github page上，以及个人域名的绑定。(因为囊中羞涩，暂时未购买域名，嘿嘿) Hexo搭建步骤 安装Git 安装Node.js 安装Hexo GitHub创建个人仓库 生成SSH添加到GitHub 将hexo部署到GitHub 设置个人域名 发布文章 1.安装GitGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。Git教程 windows：到git官网上下载,Download git,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。 linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码sudo apt-get install git 2.安装nodejs Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。 windows：nodejs选择LTS版本就行了 安装完成后，检查一下 node -v npm -v 3. 安装hexo 前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。 npm install -g hexo-cli 依旧用hexo -v查看一下版本 至此就全部安装完了。 接下来初始化一下hexo hexo init myblog 这个myblog可以自己取什么名字都行，然后 cd myblog //进入这个myblog文件夹 npm install 新建完成后，指定文件夹目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章和一些其他图片资源等 themes：主题 ** _config.yml: 博客的配置文件** hexo g hexo server 使用ctrl+c可以把服务关掉。 4. GitHub创建个人仓库首先，你先要有一个GitHub账户，去注册一个吧。 注册完登录后，在GitHub.com中看到一个New repository，新建仓库 创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。 点击create repository。 5. 生成SSH添加到GitHubgit config --global user.name \"yourname\" git config --global user.email \"youremail\" 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。 可以用以下两条，检查一下你有没有输对 git config user.name git config user.email 然后创建SSH,一路回车 ssh-keygen -t rsa -C \"youremail\" 这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。 ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key把你的id_rsa.pub里面的信息复制进去。 ssh -T git@github.com 6. 将hexo部署到GitHub 这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为YourgithubName就是你的GitHub账户 deploy: type: git repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 npm install hexo-deployer-git --save hexo clean hexo generate hexo deploy 其中 hexo clean清除了你之前生成的东西，将之前生成的静态页面等删除（与public文件有关）hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写hexo deploy 部署到github上，可以用hexo d缩写 注意deploy时可能要你输入username和password。 得到下图就说明部署成功了，过一会儿就可以在http://yourname.github.io 这个网站看到你的博客了！！ 7. 设置个人域名现在你的个人网站的地址是 yourname.github.io，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。 转载： https://blog.csdn.net/sinat_37781304/article/details/82729029","categories":[{"name":"框架","slug":"框架","permalink":"http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]}]}